# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwind.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from CataValmo import *
from Utilis import *
from Procesos import *
from ReportesClass import *
import time

class MainWindow(QMainWindow):
    def __init__(self):
        super(MainWindow,self).__init__()
        path=os.getcwdb()
        path=os.path.join(str(path,'utf-8'),'GUIs','mainwind.ui')
        uic.loadUi(path,self)
        self.show()
        
        self.actionTipo_de_Animales.triggered.connect(self.TipoAnimWind)
        self.actionClientes.triggered.connect(self.ClientesWind)
        self.actionProveedores.triggered.connect(self.ProveedoresWin)       
        self.actionOperadores.triggered.connect(self.OPeraWind)    
        self.actionUnidades_de_Medida.triggered.connect(self.UnidadesWin)    
        self.actionMaterias_Primas.triggered.connect(self.MateriasPrimasCat)   
        self.actionCorrales.triggered.connect(self.CorralesCat)    
        self.actionLista_Productos.triggered.connect(self.ProductosCat)  
        self.actionOrdenes_de_Surtido.triggered.connect(self.OrdSurt)
        self.actionEntSalAnimales.triggered.connect(self.MovAnimales) 
        self.actionAsignacion_Corral.triggered.connect(self.AsignaCorral)
        self.actionLista_Ordenes_Servido.triggered.connect(self.OrdSurt)
        self.actionCaptura_Manual_Servidos.triggered.connect(self.CapturaManualOSur)
        self.actionContenedores_Mat_Primas.triggered.connect(self.CataAlmacenesMP)
        self.actionContenedores_Producto.triggered.connect(self.CataAlmacenesProducto)
        self.actionCapturaEntMP.triggered.connect(self.EntradaMP)
        self.actionEdicionMovsMP.triggered.connect(self.EdicionMovsMp)
        self.actionSalidaMateriasPrimas.triggered.connect(self.SalidaMP)
        self.actionEntradaProductos.triggered.connect(self.EntradaProd)
        self.actionCapturaSalXBas.triggered.connect(self.SalidaPorBas)
        self.actionInvIniMPCaptura.triggered.connect(self.InventarioInicialMP)
        self.actionInvInicLista_Ultimos.triggered.connect(self.ListaUltInvMP)
        self.actionInventarioInicialProd.triggered.connect(self.InventarioInicialProductos)
        self.actionLiquidacionCliente.triggered.connect(self.ReporteSurtido)
        self.actionRep_Diario_Promedio.triggered.connect(self.ReporteSurtidoDiario)
        self.actionRepMovAnimales.triggered.connect(self.RepMovAnimales)
        self.actionRepMovAnimalesClieCorral.triggered.connect(self.RepMovAnimalesResum)
        self.actionPor_Cliente_Corral_Cant_Actual.triggered.connect(self.RepPorCorralClieCorrCanAct)
        self.actionMovimientosMP.triggered.connect(self.MovsMPTodosWin)
        self.actionPorAlmacen_y_MP.triggered.connect(self.MovsPorAlmacenMP)
        self.actionRepProdMov.triggered.connect(self.RepMovsProductos)
        self.actionRepProdCliente.triggered.connect(self.RepMovsProdPorProd)
        self.actionRepAlmaPor_Producto.triggered.connect(self.RepAlmaXProd)
        self.actionConfiguraciones.triggered.connect(self.Configs)
        self.actionSurtidoMovimientos.triggered.connect(self.SurtidoMovs)
        self.RepVen_AlmaProdPresenta.triggered.connect(self.RepAlmaProdPresenta)
        self.actionVentasMovTodos.triggered.connect(self.RepVentMovsTodos)
        self.RepVen_ClienProdPresenta.triggered.connect(self.RepVentClienProd)
        self.actionPor_Cliente_Corrales.triggered.connect(self.RepAnimaClieCorr)
        self.actionEdicionMovimientosProductos.triggered.connect(self.EdicionMovsProd)
        
        
    def closeEvent(self,event):
        res=QMessageBox.question(self,"Salir del programa","Quieres salir del Programa?????",
                                  QMessageBox.Yes | QMessageBox.No)
        if res==QMessageBox.Yes: event.accept()
        else : event.ignore()
   
    def TipoAnimWind(self):
        self.dialog= TipoAnimalWin()
        #self.dialog.MessageLbl.setText("")
        self.dialog.show()
       
    def ClientesWind(self):
        self.dialog=ClienteWin()  
        self.dialog.show()
            
    def ProveedoresWin(self):
        self.dialog=ProveedoresWin()  
        self.dialog.show()
    
    def OPeraWind(self):
        self.dialog= Operadoreswin()
        self.dialog.show()
    
    def UnidadesWin(self):
        self.dialog=Unidadeswin()
        self.dialog.show()
    
    def MateriasPrimasCat(self):
        self.dialog=MateriasPrimasWin()
        self.dialog.show()
   
    def CorralesCat(self):
        self.dialog=CorralesWin()
        self.dialog.show()
    
    def ProductosCat(self):
        self.dialog=Productos()
        self.dialog.show()
    
    def CataAlmacenesMP(self):
        self.dialog=CatAlamaMP()
        self.dialog.show()

    def CataAlmacenesProducto(self):
        self.dialog=CatAlamaProductos()
        self.dialog.show()
       
    def OrdSurt(self):
        self.dialogo=ListaOrdenesSurtido()
        self.dialogo.show()
    #  -----------------Reportes De Movimiento Animales
    def MovAnimales(self):
        self.dialog=MovAnimales()
        self.dialog.show()

    def AsignaCorral(self):
        self.dialog=AsignaCorral()
        self.dialog.show()
    
    def RepMovAnimales(self) : 
        self.dialog=ReporteMovimientoAnimales()
        self.dialog.show() 
    
    def RepMovAnimalesResum(self):
        self.dialog=ReporteMovAnimalesRes()
        self.dialog.show() 
    
    def RepAnimaClieCorr(self):
        self.dialog=RepAnimaClienXCorral()
        self.dialog.show() 
    
    def RepPorCorralClieCorrCanAct(self):
        self.dialog=RepAnimalesClienteCorraCantAct()
        self.dialog.show()

    def CapturaManualOSur(self):
        self.dialog=CapturaOrdenSurtido(0,0)
        self.dialog.show()

    def EntradaMP(self):
        self.dialog=EntSalMPrima(0)
        self.dialog.show()
    
    def EdicionMovsMp(self):
        self.dialogo=EdicionMovsMPyProd(1)
        self.dialogo.show()
    
    def EdicionMovsProd(self):
        self.dialogo=EdicionMovsMPyProd(3)
        self.dialogo.show()

    def SalidaMP(self): 
        self.dialog=EntSalMPrima(1)
        self.dialog.show()      

    def EntradaProd(self):
        pass
        #self.dialog=EntSalProductos(0)
        #self.dialog.show()
    
    def SalidaPorBas(self):
        self.dialog=SalidasPorBas()
        self.dialog.show()
        
    def InventarioInicialMP(self):
        self.dialog=InventarioInicialMPyProd(0)
        self.dialog.show()
    
    def ListaUltInvMP(self):
        self.dialog=ListaInvenInicMP()
        self.dialog.show()
    
    def InventarioInicialProductos(self):
        self.dialog=InventarioInicialMPyProd(1)
        self.dialog.show()
    
    def SurtidoMovs(self):
        self.dialog=RepSurtidosMovs()
        self.dialog.show()

    def ReporteSurtido(self):
        self.dialog=RepLiquidaCliente()
        #self.dialog=ReporteLiquidacionCliente()
        self.dialog.show()
    
    def ReporteSurtidoDiario(self):
        self.dialog=RepDiarioPromedio()
        self.dialog.show()

    def MovsMPTodosWin(self):
        self.dialogo=RepMovimentosMPTodos(0)
        self.dialogo.show()

    def MovsPorAlmacenMP(self):
        self.dialogo=RepMPResumen()
        self.dialogo.show()

    def RepMovsProductos(self):
        return
        self.dialogo=RepProdTodos()
        self.dialogo.show()
    
    def RepMovsProdPorProd(self):
        self.dialogo=RepProdActual()
        self.dialogo.show()
    
    def RepAlmaXProd(self):
        self.dialogo=RepAlmaPorProducto()
        self.dialogo.show()
   
    def RepAlmaProdPresenta(self):
        self.dialogo=RepAlmaProdPresen(1)
        self.dialogo.show() 
    
    def RepVentClienProd(self):
        self.dialogo=RepAlmaProdPresen(2)
        self.dialogo.show() 
    
    def RepVentMovsTodos(self):
        self.dialogo=RepVentMovimientos()
        self.dialogo.show()
    
    def Configs(self) : 
         self.dialog=Configs()
         self.dialog.show() 


app = QtWidgets.QApplication(sys.argv)
UI=MainWindow()
app.exec_()

